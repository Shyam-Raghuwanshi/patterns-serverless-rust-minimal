name: ci

# Check out https://help.github.com/en/articles/workflow-syntax-for-github-actions for documentation on Actions.
on: push

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-08-28
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo check --all

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-08-28
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-08-28
          override: true
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --all-targets -- -D clippy::all

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-08-28
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo test

  # Generate a static build artifact for usage in deployments.
  assets:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [check, fmt, clippy, test]

    steps:
      - uses: actions/checkout@v2
      - name: Install musl-tools
        run: sudo apt-get install musl-tools
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-08-28
          override: true
          target: x86_64-unknown-linux-musl
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-release

      - run: |
          cargo build --release --target x86_64-unknown-linux-musl --features vendored

      # Disabled: Artifacts are not available across workflows.
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: bootstrap-${{ github.sha }}
      #     path: ./target/x86_64-unknown-linux-musl/release/sls_rust_minimal
      #     if-no-files-found: error
